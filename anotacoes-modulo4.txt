	IFRAME

  JANELA PARA OUTRO SITE
<iframe src="https://cursoemvideo.com" frameborder="0">

Nem todo site é compatível com iframe, como no caso do google. Você pode fazer da segunte forma:

<iframe src="https://google.com" frameborder="0">
 <a href="https://google.com" target="_blank">Link do google</a>
</iframe>

Caso o iframe não seja compatível, ele exibirá um link para acessar o site.

O TAMANHO PADRÃO DO IFRAME É DE 300x150

	MANIPULANDO IFRAMES 
Além das estilizações do iframe, no <style>, você consegue atribuir um "name" dentro da tag <iframe>
e utilizar no target de algum link. Exemplo:

<a href="https://blablabla.com" targe="frame">Clique</a>

<iframe src="" name="frame">


Quando você clicar no link, ao invés da página carregar em outra aba ou na mesma aba, ela será exibida no iframe.
(Consultar Ex24)

	PROBLEMAS DO iFRAME:
 -Problemas de segurança: por você exibir o site de outra pessoa(se for o caso), se o site da outra pessoa tiver infectado
com algum script malicioso, o seu também estará.

 -Problemas de acessibilidade: se alguma pessoa cega acessar o site, o software de leitura de tela terá dificuldade com o
iframe.

 -Problemas de busca: o bot do google tem problemas em lidar com iframe, e taca o site "mais pra baixo" quando tem uso
de iframes.

	DEIXANDO O IFRAME MAIS SEGURO

Você pode colocar, dentro da tag <iframe> o parâmetro sandbox="sandbox". Caso seu site faça cadastro, isso impedirá
que outro site utilize o seu site para roubar dados, ou algo do tipo kkkkkkkkkkk :s

Colocando "allow-same-origin" dentro do sandbox, você permite o uso de formulário dentro da mesma origem, mesmo servidor.

Você também pode colocar o parâmetro referrerpolicy="no-referer", para que não utilizem seus dados para fazer propaganda

	INCORPORAÇÃO UTIL COM IFRAME

Mapas do google, do waze e google docs!


CONHECIMENTO NOVO ADQUIRIDO NO MINI PROJETO CELULAR:
Quando você for utilizar o hover e, quando você colocar o ponteiro do mouse no objeto, ele ficar movimentando
os objetos do lado, coloque a "box-sizing: border-box;" fora do hover! Exemplo:

section#socialmedias img{
    margin: 15px;
    width: 50px;
    height: 50px;
    box-shadow: 3px 4px 5px rgba(0, 0, 0, 0.399);
    border-radius: 50%;
    box-sizing: border-box;
}

#socialmedias img:hover{
    transition: 0.08s;
    border: 2px solid white;
}


	FORMULARIOS

<form action="cadastro.php">
        <p>Nome: <input type="text" name="nome" id="nome"></p>
        <p>Sobrenome: <input type="text" name="sobrenome" id="sobrenome"></p>
        <p><input type="submit" value="Enviar"></p>
</form>

   o input type="submit" enviará os dados colocados nos input text para o cadastro.php, nome colocado dentro da tag action
na tag form.

   O name nas tags input text, é mais útil para o html e para o php, já o id é utilizado mais em javascript

   Relacionando o input(campo para preencher) com seu respectivo nome:
Utilizando a tag <label>, conseguimos relacionar o dado a ser preenchido com a sua lacuna de preenchimento. Exemplo:

form action="cadastro.php">
        <p><label for="inome">Nome:</label> <input type="text" name="nome" id="inome"></p>
        <p><label for="isobrenome">Sobrenome:</label> <input type="text" name="sobrenome" id="isobrenome"></p>
        <p><input type="submit" value="Enviar"></p>
</form>

   Antes o Nome: não estava envelopado na tag label, agora envelopado, você relaciona ele com o input, ajudando o navegador
a entender que se trata de um formulário e você também cria uma área maior para clicar, ajudando muito o usuário mobile.

     Métodos de envio de formulário

  O método padrão é o GET: após o envio do formulário, os dados aparecem na URL. Como resolver?
  UTILIZANDO O MÉTODO POST! Com isso, não irá aparecer os dados na URL. Apesar de ainda não estarem seguros.
 E por que não estão seguros??
Porque você consegue acessa-los em: inspecionar elemento > network > headers(ou payload)
Vai ter uma linha com o nome de "from data" e lá estará os dados preenchidos no formulário.

  Quando utilizar get? Quando os dados não são sensíveis e quando NÃO SÃO ARQUIVOS.
    Quando utilizar post? Quando os dados forem sensíveis E QUANDO FOREM ARQUIVOS.
(É preciso estudar https para que os dados fiquem seguros de verdade)	

Quando você envia dados por GET, você só pode enviar 3000 bites(+/- 3 mil letras).

Até então o formulário não está tão responsivo. Se você não preencher os campos e enviar, mesmo sem os campos ele aceita.
Para resolver isso, temos que colocar "required" dentro da tag input. Exemplo:

<form action="cadastro.php" method="post">
        <p>
            <label for="iusu">Usuário: </label>
            <input type="text" name="usu" id="iusu" required>
        </p>
        
        <p>
            <label for="isenha" method="post">Palavra-Passe</label>
            <input type="password" name="senha" id="isenha" required>
        </p>
        <p>
            <input type="submit" value="ENVIAR">
        </p>
        <p>
            <input type="reset" value="LIMPAR">
        </p>
</form>

RELEMBRE! SEMPRE UTILIZE A TAG LABLE PARA OS INPUTS!    

Manipule a quantidade de caracteres para o formulário utilizando os parâmetros "minlenght" e "maxlenght" dentro
do input!
Também tem como mudar o tamanho da lacuna com o parâmetro "size"
Conseguimos também colocar uma mensagem pra exibir dentro da lacuna com o "placeholder"
Agora para colocar o auto-completar, colocamos dentro da tag FORMS o parâmetro autocomplete="on"
Colocando o autocomplete no input, você dá significado às lacunas a serem preenchidas. Exemplo:

<form action="cadastro.php" method="post" autocomplete="on">
        <p>
            <label for="iusu">Usuário: </label>
            <input type="text" name="usu" id="iusu" required minlength="4" maxlength="15" size="15"
 placeholder="Nome de usuário" autocomplete="username">
        </p>
</form>

para input number: step( + x/ - x); min, max, value(pra começar já com um valor)

para number se usa min e max, para text se usa maxlenght e minlenght

input:month

Recapitulando...
Estrutura do formulário:
formulario        <form action="cadastro.php" method="post">
paragrafo	    <p>
label 			<label for="inome">Usuário
input			  <input type="text" name="nome" id="inome" minlenght="3" maxlenght="30" required>
botão de envio			<input type="submit">
botão de limpar			<input type="reset">


coisas importantes:
required(só pode enviar o formulário se preencher a lacuna)
size(define o tamanho da caixa de preenchimento)
placeholder(mensagem dentro da caixa de preenchimento)
autocomplete(dentro do form da opções de preenchimento)
autocomplete(dentro do input você define o tipo: se é nome, senha, nick)
 

	CHECKBOX E RADIO

input:checkbox -> caixa pra marcar opções
input:radio -> caixa para marcar UMA opção

 <fieldset>
        <legend>Esportes Preferidos</legend>
        <input type="checkbox" name="basq" id="ibasq"> <label for="ibasq">Basquete</label><br>
        <input type="checkbox" name="fute" id="ifute" checked> <label for="ifute">Futebol</label><br>
        <input type="checkbox" name="volei" id="ivolei"> <label for="ivolei">Volei</label><br>
        <input type="checkbox" name="nata" id="inata"> <label for="inata">Natação</label><br>
        <input type="checkbox" name="hoq" id="ihoq"> <label for="ihoq">Hóquei</label><br>
 </fieldset>
 
ao colocar checked dentro do input, ele aparece marcado naturalmente
no input:radio o NOME PRECISA SER IGUAL E O ID DIFERENTE

Outros input:
range
color
file
...
<form action="cadastro.php" method="get" autocomplete="on">
        <p>
            <label for="icor">Cor:</label>
            <input type="color" name="cor" id="icor" value="#0fa64b">
        </p>
        <p>
            <label for="inivel">Nível de Satisfação</label>
            <input type="range" name="nivel" id="inivel" min="1" max="5" value="1">
        </p>
	<p>
	<label for="ifile">Arquivo</label>
	<input type="file" name="file" id="ifile">
	</p>
        <p>
            <input type="submit" value="ENVIAR">
            <input type="reset" value="LIMPAR">
        </p>
</form>

	ELEMENTOS FORA DA TAG INPUT
option
optgroup
datalist

<form action="cadastro.php" method="get" autocomplete="on">
        <p>
            <label for="iest">Estado:</label>
            <select name="est" id="iest" required>
                <option value="" selected>---Escolha---</option>
                <optgroup label="Região Sudeste">
                    <option value="SP">São Paulo</option>
                    <option value="RJ">Rio de Janeiro</option>
                    <option value="MG">Minas Gerais</option>
                </optgroup>

                <optgroup label="Região Nordeste">
                    <option value="AL">Alagoas</option>
                    <option value="BA">Bahia</option>
                    <option value="PE">Pernambuco</option>
                </optgroup>
            </select>
        </p>
        <p>
            <label for="iprof">Profissão</label>
            <input type="text" name="prof" id="iprof" list="lstprof">
            <datalist id="lstprof">
                <option value="CONT">Contador</option>
                <option value="ELET">Eletricista</option>
                <option value="PROF">Professor</option>
                <option value="ADMI">Administrador</option>
                <option value="DEV">Desenvolvedor</option>
            </datalist>
</p>

Um pouco de JS no index8, 9 e 10 do exercício 26. Revisar, pois é a coisa mais legal do capítulo:

 <form action="cadastro.php" method="get" autocomplete="on">
        <p>
            <label for="iano">Em que ano você nasceu?</label>
            <input type="number" name="ano" id="iano" min="1925" max="2025" oninput="calcIdade()">
        </p>
        <p>
            <label for="iidade">Você tem, ou terá: </label>
            <output id="iidade">0</output>
        </p>

        <p>
            <input type="submit" value="ENVIAR">
            <input type="reset" value="LIMPAR">
        </p>
    </form>
    <script>
        function calcIdade() {
            let atual = new Date().getFullYear()
            iidade.innerHTML = Number(atual) - Number(iano.value)
        }
    </script>

		MEDIA QUERIES

Utilizado tanto para a responsividade do site em diversos dispositivos, quanto para coisas específicas como:
Formatar o site para impressão em PDF, tirando elementos inúteis para a impressão.

Mediatypes: dentro do link css, colocando o parametro media conseguimos estabelecer para qual exibição será aquele css:
media="screen": será para a exibição do site em tela.
media="print": exibição para impressão.

	MEDIA QUERY = MEDIA TYPE = MEDIA FEATURES

Media features: conseguimos adicionar parâmetro dentro do parâmetro screen no link:css. Veja:
media="screen and (orientation: portrait)" <- aqui eu estou dizendo que as configurações serão para tela retrato.
media="screen and (orientation: landscape)" <- e aqui para paisagem.
media="all" <- configuração geral, para todas as mídias. É o principal. Os outros serão configurações adicionais apenas.

é possível utilizar @media dentro da tag style para fazer declarações de media queries. Exemplo:

<style>
@media screen and (orientation: portrait){

}
</style>

	MOBILE FIRST
basicamente é pensar na construção do site PRIMEIRO no mobile, e depois ir adaptando-o para telas maiores.